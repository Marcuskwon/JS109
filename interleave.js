/* Create a function, that accepts an arbitrary number of arrays and returns a single array generated by alternately appending elements from the passed in arguments. 
If one of them is shorter than the others, the result should be padded with empty elements.
*/

/*
problem: take in an arbitrary number of  array and push each element of the arrays in turn to a return array

rules:
if the lengths of input arrays are different, the element that gets pushed for a shorter one, should be null

input: multiple arrays
output: array

algorithm:
take in multiple arrays
create a vairalbe 'returnArray' and set it to an empty array

loop the input array
*/

function interleave(...arr) {
  let returnArray = [];
  let longestLength = arr.slice().sort((a, b) => b.length - a.length)[0].length;
  for (let i = 0; i < longestLength; i++) {
    for (let i2 = 0; i2 < arr.length; i2++) {
      if (arr[i2][i] === undefined) {
        returnArray.push(null);
        
      } else {
        returnArray.push(arr[i2][i]);
      }
    }
    }

    return returnArray;
    
}



console.log(interleave([1, 2, 3], ["c", "d", "e"])); // === [1, "c", 2, "d", 3, "e"]
console.log(interleave([1, 2, 3], [4, 5])); // === [1, 4, 2, 5, 3, null]
console.log(interleave([1, 2, 3], [4, 5, 6], [7, 8, 9])); // === [1, 4, 7, 2, 5, 8, 3, 6, 9]
